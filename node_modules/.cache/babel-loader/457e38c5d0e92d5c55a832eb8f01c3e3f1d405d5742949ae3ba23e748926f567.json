{"ast":null,"code":"import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nconst initialUserData = {\n  userData: \"\"\n};\nconst initialPetSelectedData = {\n  petSelected: {}\n};\nconst initialState = {\n  dataUserPets: [],\n  file: \"\",\n  value: {},\n  dataUser: initialUserData,\n  counterPetSelected: initialPetSelectedData,\n  counterDataForm: {},\n  lostPets: {},\n  refreshThisSelector: false,\n  isOpened: false,\n  newMarkerValue: []\n};\nconst dataReducer = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    positionValue: (state, action) => {\n      console.log(\"state,action\", state, action);\n      state.value = action.payload;\n    },\n    imageValue: (state, action) => {\n      state.file = action.payload.base64String;\n    },\n    newMarkerValue: (state, action) => {\n      console.log(\"newMarker\", state, action);\n      state.newMarkerValue = [action.payload.latitude, action.payload.longitude];\n    },\n    userPets: (state, action) => {\n      state.dataUserPets = action.payload;\n    },\n    userData: (state, action) => {\n      state.dataUser.userData = action.payload;\n    },\n    petLost: (state, action) => {\n      state.lostPets = action.payload;\n    },\n    petSelected: (state, action) => {\n      state.counterPetSelected.petSelected = action.payload;\n    },\n    formValue: (state, action) => {\n      state.counterDataForm = action.payload;\n    },\n    refreshThis: (state, action) => {\n      console.log(\"state,action\", state, action);\n      state.refreshThisSelector = action.payload;\n    },\n    isOpen: (state, action) => {\n      console.log(\"action payload is open\", action.payload);\n      state.isOpened = action.payload;\n    }\n  }\n});\nexport const {\n  userPets,\n  userData,\n  petSelected,\n  formValue,\n  petLost,\n  refreshThis,\n  isOpen,\n  imageValue,\n  positionValue,\n  newMarkerValue\n} = dataReducer.actions;\nexport const selectCount = state => state.counter.file;\nexport const userPet = state => state.counter.dataUserPets;\nexport const usersData = state => state.counter.dataUser.userData;\nexport const counterPetSelected = state => state.counter.counterPetSelected.petSelected;\nexport const counterDataForm = state => state.counter.counterDataForm;\nexport const lostPets = state => state.counter.lostPets;\nexport const refresh = state => state.counter.refreshThisSelector;\nexport const openModal = state => state.counter.isOpened;\nexport const position = state => state.counter.value;\nexport const markerValue = state => state.counter.newMarkerValue;\nexport default dataReducer.reducer;","map":{"version":3,"names":["createSlice","PayloadAction","initialUserData","userData","initialPetSelectedData","petSelected","initialState","dataUserPets","file","value","dataUser","counterPetSelected","counterDataForm","lostPets","refreshThisSelector","isOpened","newMarkerValue","dataReducer","name","reducers","positionValue","state","action","console","log","payload","imageValue","base64String","latitude","longitude","userPets","petLost","formValue","refreshThis","isOpen","actions","selectCount","counter","userPet","usersData","refresh","openModal","position","markerValue","reducer"],"sources":["C:/Users/southAtoms/Desktop/bootstrap-react-calm/src/components/dataReducer/dataReducer.js"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\ninterface UserData {\r\n  userData: any;\r\n}\r\n\r\ninterface PetSelectedData {\r\n  petSelected: any;\r\n}\r\n\r\ninterface DataState {\r\n  dataUserPets: any;\r\n  file: string;\r\n  value: any;\r\n  dataUser: UserData;\r\n  counterPetSelected: PetSelectedData;\r\n  counterDataForm: any;\r\n  lostPets: any;\r\n  refreshThisSelector: boolean;\r\n  isOpened: boolean;\r\n  newMarkerValue: number[];\r\n}\r\n\r\nconst initialUserData: UserData = {\r\n  userData: \"\",\r\n};\r\n\r\nconst initialPetSelectedData: PetSelectedData = {\r\n  petSelected: {},\r\n};\r\n\r\nconst initialState: DataState = {\r\n  dataUserPets: [],\r\n  file: \"\",\r\n  value: {},\r\n  dataUser: initialUserData,\r\n  counterPetSelected: initialPetSelectedData,\r\n  counterDataForm: {},\r\n  lostPets: {},\r\n  refreshThisSelector: false,\r\n  isOpened: false,\r\n  newMarkerValue: [],\r\n};\r\n\r\nconst dataReducer = createSlice({\r\n  name: \"counter\",\r\n  initialState,\r\n  reducers: {\r\n    positionValue: (state, action: PayloadAction<any>) => {\r\n      console.log(\"state,action\", state, action);\r\n      state.value = action.payload;\r\n    },\r\n    imageValue: (state, action: PayloadAction<any>) => {\r\n      state.file = action.payload.base64String;\r\n    },\r\n    newMarkerValue: (\r\n      state,\r\n      action: PayloadAction<{ latitude: number; longitude: number }>\r\n    ) => {\r\n      console.log(\"newMarker\", state, action);\r\n      state.newMarkerValue = [\r\n        action.payload.latitude,\r\n        action.payload.longitude,\r\n      ];\r\n    },\r\n    userPets: (state, action: PayloadAction<any>) => {\r\n      state.dataUserPets = action.payload;\r\n    },\r\n    userData: (state, action: PayloadAction<any>) => {\r\n      state.dataUser.userData = action.payload;\r\n    },\r\n    petLost: (state, action: PayloadAction<any>) => {\r\n      state.lostPets = action.payload;\r\n    },\r\n    petSelected: (state, action: PayloadAction<any>) => {\r\n      state.counterPetSelected.petSelected = action.payload;\r\n    },\r\n    formValue: (state, action: PayloadAction<any>) => {\r\n      state.counterDataForm = action.payload;\r\n    },\r\n    refreshThis: (state, action: PayloadAction<boolean>) => {\r\n      console.log(\"state,action\", state, action);\r\n      state.refreshThisSelector = action.payload;\r\n    },\r\n    isOpen: (state, action: PayloadAction<boolean>) => {\r\n      console.log(\"action payload is open\", action.payload);\r\n      state.isOpened = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  userPets,\r\n  userData,\r\n  petSelected,\r\n  formValue,\r\n  petLost,\r\n  refreshThis,\r\n  isOpen,\r\n  imageValue,\r\n  positionValue,\r\n  newMarkerValue,\r\n} = dataReducer.actions;\r\n\r\nexport const selectCount = (state: { counter: DataState }) =>\r\n  state.counter.file;\r\nexport const userPet = (state: { counter: DataState }) =>\r\n  state.counter.dataUserPets;\r\nexport const usersData = (state: { counter: DataState }) =>\r\n  state.counter.dataUser.userData;\r\nexport const counterPetSelected = (state: { counter: DataState }) =>\r\n  state.counter.counterPetSelected.petSelected;\r\nexport const counterDataForm = (state: { counter: DataState }) =>\r\n  state.counter.counterDataForm;\r\nexport const lostPets = (state: { counter: DataState }) =>\r\n  state.counter.lostPets;\r\nexport const refresh = (state: { counter: DataState }) =>\r\n  state.counter.refreshThisSelector;\r\nexport const openModal = (state: { counter: DataState }) =>\r\n  state.counter.isOpened;\r\nexport const position = (state: { counter: DataState }) => state.counter.value;\r\nexport const markerValue = (state: { counter: DataState }) =>\r\n  state.counter.newMarkerValue;\r\n\r\nexport default dataReducer.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}